{"remainingRequest":"/home/nicolas/Escritorio/Grupo 3_Proyecto Bibliotech/Sistema/Aplicación Web/Frontend/bibliotech/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nicolas/Escritorio/Grupo 3_Proyecto Bibliotech/Sistema/Aplicación Web/Frontend/bibliotech/src/views/Login.vue?vue&type=template&id=26084dc2&","dependencies":[{"path":"/home/nicolas/Escritorio/Grupo 3_Proyecto Bibliotech/Sistema/Aplicación Web/Frontend/bibliotech/src/views/Login.vue","mtime":1626295208896},{"path":"/home/nicolas/Escritorio/Grupo 3_Proyecto Bibliotech/Sistema/Aplicación Web/Frontend/bibliotech/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nicolas/Escritorio/Grupo 3_Proyecto Bibliotech/Sistema/Aplicación Web/Frontend/bibliotech/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/nicolas/Escritorio/Grupo 3_Proyecto Bibliotech/Sistema/Aplicación Web/Frontend/bibliotech/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nicolas/Escritorio/Grupo 3_Proyecto Bibliotech/Sistema/Aplicación Web/Frontend/bibliotech/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}